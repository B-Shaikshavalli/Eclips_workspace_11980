package java8features;

import java.util.Arrays;
import java.util.Comparator;
import java.util.List;
import java.util.PriorityQueue;
import java.util.function.Predicate;

public class StreamPipeLineDemo {

	public static void main(String[] args) {
		List<Integer> salaries = Arrays.asList(50000,40000,20000,30000,60000);
		System.out.println(salaries);
		
		/*
		  1.Filter the salaries which are >= 50000
		  2.Increment the filters salaries by 10%
		  3.Find the filtered and incremented salaries total
		  Expected OutPut :
		  1.50000,60000
		  2.55000 + 66000
		  3.1,21,0000
		 */
		
		Double total =salaries.stream()          //Source
		.filter((sal) -> sal >=50000)            //Intermediate operation -1
		.map((salary) -> salary + salary *.1)    //Intermediate operation -1
		.mapToDouble(salary -> salary)           //Intermediate operation -1
		.sum();                                 //Terminal Operation
		
		
		System.out.println(total);
		
		List<Integer> incrementsal = salaries.stream()  //Source
				.filter((salary) -> salary <= 50000)   //Intermediate operation -1          
				.sorted(Comparator.reverseOrder())     //Intermediate operation -2
				.toList();                             //Terminal Operation
		
		System.out.println(incrementsal);
		System.out.println("---------------------");
		//Task 3
		//input : [1,3,2,4,3,1,2]
		//output : [4,3,2,1]
		List<Integer> nums = Arrays.asList(1,3,2,4,3,1,2);
		System.out.println(nums);
		
		
		List<Integer> numn = nums.stream()
				.distinct()
				.sorted(Comparator.reverseOrder());
		
		System.out.println(numn);
				
		

	}

}
